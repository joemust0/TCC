{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SharedTableService {\n  constructor() {\n    this.tabelaOriginal = [];\n    this.tabelaEspelhada = [];\n    this.listaTemporaria = [];\n    this.tabelaEspelhadaSubject = new Subject();\n  }\n  adicionarLinhaOriginal(linha) {\n    this.tabelaOriginal.push(linha);\n  }\n  obterTabelaOriginal() {\n    return this.tabelaOriginal;\n  }\n  adicionarLinhaEspelhada(linha) {\n    this.listaTemporaria.push(linha);\n  }\n  copiarParaTabelaEspelhada() {\n    this.tabelaEspelhada = [...this.listaTemporaria];\n    this.listaTemporaria = [];\n    // Notificar os assinantes (componentes) sobre a atualização da tabela espelhada\n    this.tabelaEspelhadaSubject.next(this.tabelaEspelhada);\n  }\n  obterTabelaEspelhada() {\n    return this.tabelaEspelhada;\n  }\n  static #_ = this.ɵfac = function SharedTableService_Factory(t) {\n    return new (t || SharedTableService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedTableService,\n    factory: SharedTableService.ɵfac\n  });\n}","map":{"version":3,"names":["Subject","SharedTableService","constructor","tabelaOriginal","tabelaEspelhada","listaTemporaria","tabelaEspelhadaSubject","adicionarLinhaOriginal","linha","push","obterTabelaOriginal","adicionarLinhaEspelhada","copiarParaTabelaEspelhada","next","obterTabelaEspelhada","_","_2","factory","ɵfac"],"sources":["C:\\Users\\JOE\\Projeto\\Angular\\TCC\\src\\app\\Dev\\processos\\shared-tab.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SharedTableService {\r\n  private tabelaOriginal: any[] = [];\r\n  private tabelaEspelhada: any[] = [];\r\n  private listaTemporaria: any[] = [];\r\n\r\n  tabelaEspelhadaSubject: Subject<any[]> = new Subject<any[]>();\r\n\r\n  adicionarLinhaOriginal(linha: any) {\r\n    this.tabelaOriginal.push(linha);\r\n  }\r\n\r\n  obterTabelaOriginal() {\r\n    return this.tabelaOriginal;\r\n  }\r\n\r\n  adicionarLinhaEspelhada(linha: any) {\r\n    this.listaTemporaria.push(linha);\r\n  }\r\n\r\n  copiarParaTabelaEspelhada() {\r\n    this.tabelaEspelhada = [...this.listaTemporaria];\r\n    this.listaTemporaria = [];\r\n    // Notificar os assinantes (componentes) sobre a atualização da tabela espelhada\r\n    this.tabelaEspelhadaSubject.next(this.tabelaEspelhada);\r\n  }\r\n\r\n  obterTabelaEspelhada() {\r\n    return this.tabelaEspelhada;\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAG9B,OAAM,MAAOC,kBAAkB;EAD/BC,YAAA;IAEU,KAAAC,cAAc,GAAU,EAAE;IAC1B,KAAAC,eAAe,GAAU,EAAE;IAC3B,KAAAC,eAAe,GAAU,EAAE;IAEnC,KAAAC,sBAAsB,GAAmB,IAAIN,OAAO,EAAS;;EAE7DO,sBAAsBA,CAACC,KAAU;IAC/B,IAAI,CAACL,cAAc,CAACM,IAAI,CAACD,KAAK,CAAC;EACjC;EAEAE,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACP,cAAc;EAC5B;EAEAQ,uBAAuBA,CAACH,KAAU;IAChC,IAAI,CAACH,eAAe,CAACI,IAAI,CAACD,KAAK,CAAC;EAClC;EAEAI,yBAAyBA,CAAA;IACvB,IAAI,CAACR,eAAe,GAAG,CAAC,GAAG,IAAI,CAACC,eAAe,CAAC;IAChD,IAAI,CAACA,eAAe,GAAG,EAAE;IACzB;IACA,IAAI,CAACC,sBAAsB,CAACO,IAAI,CAAC,IAAI,CAACT,eAAe,CAAC;EACxD;EAEAU,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACV,eAAe;EAC7B;EAAC,QAAAW,CAAA,G;qBA5BUd,kBAAkB;EAAA;EAAA,QAAAe,EAAA,G;WAAlBf,kBAAkB;IAAAgB,OAAA,EAAlBhB,kBAAkB,CAAAiB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}