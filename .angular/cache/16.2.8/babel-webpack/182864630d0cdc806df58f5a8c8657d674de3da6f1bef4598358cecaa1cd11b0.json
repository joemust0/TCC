{"ast":null,"code":"export class CalcExt {\n  constructor() {\n    this.value = 0;\n  }\n  //1\n  calcLogic(frist, operarion, last) {\n    switch (operarion) {\n      case \"+\":\n        return this.sum(frist, last);\n      case \"-\":\n        return this.subtract(frist, last);\n      case \"*\":\n        return this.multiply(frist, last);\n      case \"/\":\n        return this.divide(frist, last);\n      default:\n        break;\n    }\n    return 0;\n  }\n  //2\n  calculate(frist, operarion, last) {\n    let result = this.calcLogic(frist, operarion, last);\n    this.value = result;\n  }\n  sum(frist, last) {\n    return frist + last;\n  }\n  subtract(frist, last) {\n    return frist - last;\n  }\n  multiply(frist, last) {\n    return frist * last;\n  }\n  divide(frist, last) {\n    return frist / last;\n  }\n  showValue() {\n    return this.value;\n  }\n}","map":{"version":3,"names":["CalcExt","constructor","value","calcLogic","frist","operarion","last","sum","subtract","multiply","divide","calculate","result","showValue"],"sources":["C:\\Users\\JOE\\Projeto\\Angular\\TCC\\src\\app\\Dev\\motor-calc\\CalcExt.ts"],"sourcesContent":["import { Calculator } from \"./Calculator\";\r\n\r\ntype Operation=\"+\"| \"-\"| \"*\"| \"/\";\r\n\r\nexport class CalcExt implements Calculator{\r\nprivate value: number;\r\n\r\nconstructor(){\r\n  this.value = 0;\r\n}\r\n//1\r\nprivate calcLogic(frist:number, operarion:Operation, last:number):number{\r\nswitch (operarion) {\r\n  case \"+\":\r\n    return this.sum(frist, last);\r\n    case \"-\":\r\n    return this.subtract(frist, last);\r\n    case \"*\":\r\n    return this.multiply(frist, last);\r\n    case \"/\":\r\n    return this.divide(frist, last);\r\n    default:\r\n    break;\r\n}\r\nreturn 0;\r\n}\r\n//2\r\npublic calculate(frist:number, operarion:Operation, last:number){\r\nlet result = this.calcLogic(frist, operarion, last);\r\nthis.value = result;\r\n}\r\n\r\n  sum(frist: number, last: number): number {\r\n    return frist + last;\r\n  }\r\n  subtract(frist: number, last: number): number {\r\n    return frist - last;\r\n  }\r\n  multiply(frist: number, last: number): number {\r\n    return frist * last;\r\n  }\r\n  divide(frist: number, last: number): number {\r\n    return frist / last;\r\n  }\r\n  showValue(): number {\r\n    return this.value;\r\n  }\r\n\r\n}\r\n\r\n"],"mappings":"AAIA,OAAM,MAAOA,OAAO;EAGpBC,YAAA;IACE,IAAI,CAACC,KAAK,GAAG,CAAC;EAChB;EACA;EACQC,SAASA,CAACC,KAAY,EAAEC,SAAmB,EAAEC,IAAW;IAChE,QAAQD,SAAS;MACf,KAAK,GAAG;QACN,OAAO,IAAI,CAACE,GAAG,CAACH,KAAK,EAAEE,IAAI,CAAC;MAC5B,KAAK,GAAG;QACR,OAAO,IAAI,CAACE,QAAQ,CAACJ,KAAK,EAAEE,IAAI,CAAC;MACjC,KAAK,GAAG;QACR,OAAO,IAAI,CAACG,QAAQ,CAACL,KAAK,EAAEE,IAAI,CAAC;MACjC,KAAK,GAAG;QACR,OAAO,IAAI,CAACI,MAAM,CAACN,KAAK,EAAEE,IAAI,CAAC;MAC/B;QACA;;IAEJ,OAAO,CAAC;EACR;EACA;EACOK,SAASA,CAACP,KAAY,EAAEC,SAAmB,EAAEC,IAAW;IAC/D,IAAIM,MAAM,GAAG,IAAI,CAACT,SAAS,CAACC,KAAK,EAAEC,SAAS,EAAEC,IAAI,CAAC;IACnD,IAAI,CAACJ,KAAK,GAAGU,MAAM;EACnB;EAEEL,GAAGA,CAACH,KAAa,EAAEE,IAAY;IAC7B,OAAOF,KAAK,GAAGE,IAAI;EACrB;EACAE,QAAQA,CAACJ,KAAa,EAAEE,IAAY;IAClC,OAAOF,KAAK,GAAGE,IAAI;EACrB;EACAG,QAAQA,CAACL,KAAa,EAAEE,IAAY;IAClC,OAAOF,KAAK,GAAGE,IAAI;EACrB;EACAI,MAAMA,CAACN,KAAa,EAAEE,IAAY;IAChC,OAAOF,KAAK,GAAGE,IAAI;EACrB;EACAO,SAASA,CAAA;IACP,OAAO,IAAI,CAACX,KAAK;EACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}