{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"btnNovo\"];\nconst _c1 = [\"criarBalanco\"];\nconst _c2 = [\"tabelaB\"];\nexport class TaskComponent {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.nome = '';\n    this.descricao = '';\n    this.mostrarBalanco = false;\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      this.atualizarVisibilidade();\n    });\n  }\n  atualizarVisibilidade() {\n    if (this.oc && this.ap && this.tabelaB) {\n      const urlAtual = this.router.url;\n      const mostrarTabela = urlAtual === '/balanço' && this.mostrarBalanco;\n      this.oc.nativeElement.classList.toggle('ocultar', mostrarTabela);\n      this.ap.nativeElement.classList.toggle('ocultar', mostrarTabela);\n      this.tabelaB.nativeElement.classList.toggle('ocultar', !mostrarTabela);\n    }\n  }\n  ngOnInit() {}\n  newBalanco() {\n    console.log(\"Nome: \" + this.nome);\n    console.log(\"Descrição: \" + this.descricao);\n    // Envia os dados para a tela de lançamentos e navega para lá\n    this.router.navigate(['/lançamentos'], {\n      state: {\n        nome: this.nome,\n        descricao: this.descricao\n      }\n    });\n  }\n  nBalanco() {\n    if (this.oc && this.ap) {\n      this.oc.nativeElement.classList.add('ocultar');\n      this.ap.nativeElement.classList.remove('ocultar');\n      console.log(\"nBanalano aqui\");\n    }\n  }\n  ngAfterViewInit() {\n    this.atualizarVisibilidade();\n  }\n  gerarBalanco() {\n    this.mostrarBalanco = true;\n  }\n  static #_ = this.ɵfac = function TaskComponent_Factory(t) {\n    return new (t || TaskComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskComponent,\n    selectors: [[\"app-task\"]],\n    viewQuery: function TaskComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.oc = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ap = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabelaB = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 0,\n    consts: [[\"id\", \"novoBalanco\"], [1, \"btn-novo\"], [\"btnNovoDiv\", \"\"], [1, \"btn-novo\", 3, \"click\"], [\"btnNovo\", \"\"], [1, \"bx\", \"bx-plus-circle\"], [1, \"criarBalanco\", \"ocultar\"], [\"criarBalanco\", \"\"], [\"for\", \"nome\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Digite seu texto\", \"name\", \"name\", \"required\", \"\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"rows\", \"6\", \"cols\", \"50\", \"placeholder\", \"Digite a descri\\u00E7\\u00E3o do balan\\u00E7o\"], [1, \"novo-balanco\", 3, \"click\"]],\n    template: function TaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1, 2)(3, \"label\");\n        i0.ɵɵtext(4, \"Criar novo balan\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"button\", 3, 4);\n        i0.ɵɵlistener(\"click\", function TaskComponent_Template_button_click_6_listener() {\n          return ctx.nBalanco();\n        });\n        i0.ɵɵelement(8, \"i\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 6, 7)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Nome do balan\\u00E7o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\")(14, \"input\", 9)(15, \"br\")(16, \"br\");\n        i0.ɵɵelementStart(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"br\")(20, \"textarea\", 11)(21, \"br\");\n        i0.ɵɵelementStart(22, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function TaskComponent_Template_button_click_22_listener() {\n          return ctx.newBalanco();\n        });\n        i0.ɵɵtext(23, \"Criar Balan\\u00E7o\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n    styles: [\".ocultar[_ngcontent-%COMP%]{\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvRnJvbnQvRmVycmFtZW50YS90YXNrL3Rhc2suY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5vY3VsdGFye1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["NavigationEnd","filter","TaskComponent","constructor","router","route","nome","descricao","mostrarBalanco","events","pipe","event","subscribe","atualizarVisibilidade","oc","ap","tabelaB","urlAtual","url","mostrarTabela","nativeElement","classList","toggle","ngOnInit","newBalanco","console","log","navigate","state","nBalanco","add","remove","ngAfterViewInit","gerarBalanco","_","i0","ɵɵdirectiveInject","i1","Router","ActivatedRoute","_2","selectors","viewQuery","TaskComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","TaskComponent_Template_button_click_6_listener","TaskComponent_Template_button_click_22_listener"],"sources":["C:\\Users\\JOE\\projeto\\Angular\\TCC\\src\\app\\Front\\Ferramenta\\task\\task.component.ts","C:\\Users\\JOE\\projeto\\Angular\\TCC\\src\\app\\Front\\Ferramenta\\task\\task.component.html"],"sourcesContent":["import { Component, OnInit, Input, ElementRef, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.css']\r\n})\r\nexport class TaskComponent implements OnInit{\r\n\r\n  nome: string = '';\r\n  descricao: string = '';\r\n\r\n  @ViewChild('btnNovo', { static: false }) oc!: ElementRef;\r\n  @ViewChild('criarBalanco', { static: false }) ap!: ElementRef;\r\n  @ViewChild('tabelaB', { static: false }) tabelaB!: ElementRef;\r\n\r\n  mostrarBalanco: boolean = false;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(() => {\r\n        this.atualizarVisibilidade();\r\n      });\r\n  }\r\n  private atualizarVisibilidade() {\r\n    if (this.oc && this.ap && this.tabelaB) {\r\n      const urlAtual = this.router.url;\r\n      const mostrarTabela = urlAtual === '/balanço' && this.mostrarBalanco;\r\n\r\n      this.oc.nativeElement.classList.toggle('ocultar', mostrarTabela);\r\n      this.ap.nativeElement.classList.toggle('ocultar', mostrarTabela);\r\n      this.tabelaB.nativeElement.classList.toggle('ocultar', !mostrarTabela);\r\n    }\r\n  }\r\nngOnInit(): void {}\r\n\r\nnewBalanco() {\r\n  console.log(\"Nome: \" + this.nome);\r\n  console.log(\"Descrição: \" + this.descricao);\r\n\r\n  // Envia os dados para a tela de lançamentos e navega para lá\r\n  this.router.navigate(['/lançamentos'], {\r\n    state: {\r\n      nome: this.nome,\r\n      descricao: this.descricao\r\n    }\r\n  });\r\n}\r\n  nBalanco() {\r\n    if (this.oc && this.ap) {\r\n      this.oc.nativeElement.classList.add('ocultar');\r\n      this.ap.nativeElement.classList.remove('ocultar');\r\n      console.log(\"nBanalano aqui\");\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.atualizarVisibilidade();\r\n  }\r\n\r\n  gerarBalanco() {\r\n    this.mostrarBalanco = true;\r\n  }\r\n\r\n}\r\n","<form id=\"novoBalanco\">\r\n  <div #btnNovoDiv class=\"btn-novo\">\r\n  <label>Criar novo balanço</label>\r\n  <br>\r\n  <button #btnNovo class=\"btn-novo\" (click)=\"nBalanco()\"><i class='bx bx-plus-circle'></i></button>\r\n  </div>\r\n\r\n  <div #criarBalanco class=\"criarBalanco ocultar\">\r\n  <label for=\"nome\">Nome do balanço:</label>\r\n  <br>\r\n  <input  type=\"text\" id=\"name\" placeholder=\"Digite seu texto\" name=\"name\" required>\r\n  <br>\r\n  <br>\r\n  <label for=\"description\">Descrição:</label>\r\n  <br>\r\n  <textarea id=\"description\" name=\"description\" rows=\"6\" cols=\"50\" placeholder=\"Digite a descrição do balanço\"></textarea>\r\n  <br>\r\n  <button class=\"novo-balanco\" (click)=\"newBalanco()\">Criar Balanço</button>\r\n  </div>\r\n</form>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}