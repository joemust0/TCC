{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Dev/processos/shared-tab.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction FormComponent_tr_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\");\n  }\n}\nexport class FormComponent {\n  atualizarTipoEntrada(event) {\n    this.tipoEntrada = event.target.value;\n  }\n  atualizarEntrada(event) {\n    this.entrada = event.target.value;\n  }\n  constructor(sharedTableService) {\n    this.sharedTableService = sharedTableService;\n    this.numeroLancamento = 1;\n    this.dadosTabela = [];\n    this.tipoEntrada = 'Ativo';\n    this.entrada = 'Imobilizado';\n  }\n  adicionarLinha() {\n    // Lógica para adicionar uma linha à tabela original\n    const novaLinha = {/* ... */};\n    this.sharedTableService.adicionarLinhaOriginal(novaLinha);\n  }\n  adicionarLancamento() {\n    const numLancamento = document.querySelector(\"#Base tr:first-child .num-lancamento\").textContent;\n    const tipoEntrada = document.querySelector(\"input[type=checkbox]:checked\")?.id;\n    const tipagem = document.querySelector(\"#Tip-Entrad\").value;\n    const entrada = document.querySelector(\"#entrada\").value;\n    const valor = parseFloat(document.querySelector(\"#Valor\").value);\n    console.log(\"Número de lançamento:\", numLancamento);\n    console.log(\"Tipo de entrada:\", tipoEntrada);\n    console.log(\"Tipagem:\", tipagem);\n    console.log(\"Entrada:\", entrada);\n    console.log(\"Valor:\", valor);\n  }\n  acompanharL() {\n    // Coletar as informações do lançamento\n    const numLancamento = document.querySelector(\"#Base tr:first-child .num-lancamento\").textContent;\n    const tipoEntrada = document.querySelector(\"input[type=checkbox]:checked\")?.id;\n    const tipagem = document.querySelector(\"#Tip-Entrad\").value;\n    const entrada = document.querySelector(\"#entrada\").value;\n    const valor = parseFloat(document.querySelector(\"#Valor\").value);\n    // Criar um objeto com as informações\n    const novoLancamento = {\n      numLancamento,\n      tipoEntrada,\n      tipagem,\n      entrada,\n      valor\n    };\n    // Usar o serviço SharedTableService para adicionar os dados à lista temporária\n    this.sharedTableService.adicionarLinhaEspelhada(novoLancamento);\n    // Copiar os dados da lista temporária para a tabela espelhada\n    this.sharedTableService.copiarParaTabelaEspelhada();\n  }\n  ngOnInit() {\n    const adicionarLinhaButton = document.getElementById('Adicionar');\n    const adicionarLancamentoInicialButton = document.getElementById('AdicionarLancamentoInicial');\n    adicionarLinhaButton.addEventListener('click', () => {\n      const tabelaBase = document.getElementById('Base');\n      const tabelaNova = document.getElementById('Nova');\n      const ultimaLinhaBase = tabelaBase.querySelector('tr:last-child');\n      const novaLinha = ultimaLinhaBase.cloneNode(true);\n      // Atualize o número de lançamento na nova linha\n      const numLancamentoElement = novaLinha.querySelector('.num-lancamento');\n      if (numLancamentoElement) {\n        numLancamentoElement.textContent = this.numeroLancamento.toString();\n      }\n      // Incremente o número de lançamento para a próxima vez\n      this.numeroLancamento++;\n      tabelaBase.appendChild(novaLinha.cloneNode(true));\n      tabelaNova.appendChild(novaLinha);\n    });\n  }\n  adicionarLancamentoInicial() {\n    const tabelaBase = document.getElementById('Base');\n    const novaLinha = document.createElement('tr');\n    this.numeroLancamento++;\n    tabelaBase.appendChild(novaLinha.cloneNode(true));\n  }\n  static #_ = this.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.SharedTableService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    decls: 58,\n    vars: 3,\n    consts: [[\"id\", \"AdicionarLancamentoInicial\", \"onclick\", \"adicionarLancamento()\"], [\"border\", \"\", \"id\", \"Base\"], [1, \"num-lancamento\"], [\"id\", \"Tipo-entrada\"], [\"id\", \"Cr\\u00E9dito\", \"onclick\", \"toggleCheckBox('Cr\\u00E9dito')\", 1, \"DebCre\"], [\"for\", \"Cr\\u00E9dito\"], [\"id\", \"D\\u00E9bito\", \"onclick\", \"toggleCheckBox('Cr\\u00E9dito')\", 1, \"DebCre\"], [\"for\", \"D\\u00E9bito\"], [\"type\", \"checkbox\", \"id\", \"hiddenCr\\u00E9dito\", 2, \"display\", \"none\"], [\"type\", \"checkbox\", \"id\", \"hiddenD\\u00E9bito\", 2, \"display\", \"none\"], [\"id\", \"Tipagem\"], [\"id\", \"Tipo-Entrada\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"Ativo\"], [\"value\", \"Passivo\"], [\"value\", \"PatrL\"], [\"id\", \"Entrar\"], [\"for\", \"entrada\"], [\"id\", \"entrada\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"id\", \"entrada\"], [\"value\", \"Caixa\"], [\"value\", \"Banco\"], [\"value\", \"Imobilizado\"], [\"value\", \"Estoque\"], [\"value\", \"Fornecedor\"], [\"value\", \"Emprestimo\"], [\"value\", \"Capital-Social\"], [\"id\", \"Valores\"], [\"for\", \"Valor\"], [\"type\", \"number\", \"id\", \"Valor\", \"min\", \"0\", \"placeholder\", \"0.00\"], [4, \"ngFor\", \"ngForOf\"], [\"border\", \"\", \"id\", \"Nova\"], [\"id\", \"Adicionar\", 1, \"Adic\"], [\"id\", \"Grafico\", \"routerLink\", \"/Graf-balan\\u00E7o\", 1, \"Graf\", 3, \"click\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"form works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵtext(3, \"Adicionar Lan\\u00E7amento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"table\", 1)(5, \"tr\");\n        i0.ɵɵelement(6, \"td\", 2);\n        i0.ɵɵelementStart(7, \"td\", 3)(8, \"button\", 4)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Cr\\u00E9dito\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 6)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"D\\u00E9bito\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"input\", 8)(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"td\", 10)(17, \"label\");\n        i0.ɵɵtext(18, \"Tipo de entrada\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelementStart(20, \"select\", 11);\n        i0.ɵɵlistener(\"change\", function FormComponent_Template_select_change_20_listener($event) {\n          return ctx.atualizarTipoEntrada($event);\n        })(\"ngModelChange\", function FormComponent_Template_select_ngModelChange_20_listener($event) {\n          return ctx.tipoEntrada = $event;\n        });\n        i0.ɵɵelementStart(21, \"option\", 12);\n        i0.ɵɵtext(22, \"Ativo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 13);\n        i0.ɵɵtext(24, \"Passivo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 14);\n        i0.ɵɵtext(26, \"Patrimonio L\\u00EDquido\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"td\", 15)(28, \"label\", 16);\n        i0.ɵɵtext(29, \"Escolha sua entrada\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelementStart(31, \"select\", 17);\n        i0.ɵɵlistener(\"change\", function FormComponent_Template_select_change_31_listener($event) {\n          return ctx.atualizarEntrada($event);\n        })(\"ngModelChange\", function FormComponent_Template_select_ngModelChange_31_listener($event) {\n          return ctx.entrada = $event;\n        });\n        i0.ɵɵelement(32, \"option\", 18);\n        i0.ɵɵelementStart(33, \"option\", 19);\n        i0.ɵɵtext(34, \"Caixa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"option\", 20);\n        i0.ɵɵtext(36, \"Banco\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"option\", 21);\n        i0.ɵɵtext(38, \"Imobilizado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"option\", 22);\n        i0.ɵɵtext(40, \"Estoque\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"option\", 23);\n        i0.ɵɵtext(42, \"Fornecedor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"option\", 24);\n        i0.ɵɵtext(44, \"Emprestimo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"option\", 25);\n        i0.ɵɵtext(46, \"Capital Social\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(47, \"td\", 26)(48, \"label\", 27);\n        i0.ɵɵtext(49, \"Digite seu valor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"br\")(51, \"input\", 28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(52, FormComponent_tr_52_Template, 1, 0, \"tr\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(53, \"table\", 30);\n        i0.ɵɵelementStart(54, \"button\", 31);\n        i0.ɵɵtext(55, \"Adicionar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"button\", 32);\n        i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_56_listener() {\n          return ctx.acompanharL();\n        });\n        i0.ɵɵtext(57, \"Acompanhar\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngModel\", ctx.tipoEntrada);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.entrada);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sharedTableService.obterTabelaOriginal());\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterLink, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","FormComponent","atualizarTipoEntrada","event","tipoEntrada","target","value","atualizarEntrada","entrada","constructor","sharedTableService","numeroLancamento","dadosTabela","adicionarLinha","novaLinha","adicionarLinhaOriginal","adicionarLancamento","numLancamento","document","querySelector","textContent","id","tipagem","valor","parseFloat","console","log","acompanharL","novoLancamento","adicionarLinhaEspelhada","copiarParaTabelaEspelhada","ngOnInit","adicionarLinhaButton","getElementById","adicionarLancamentoInicialButton","addEventListener","tabelaBase","tabelaNova","ultimaLinhaBase","cloneNode","numLancamentoElement","toString","appendChild","adicionarLancamentoInicial","createElement","_","ɵɵdirectiveInject","i1","SharedTableService","_2","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FormComponent_Template_select_change_20_listener","$event","FormComponent_Template_select_ngModelChange_20_listener","FormComponent_Template_select_change_31_listener","FormComponent_Template_select_ngModelChange_31_listener","ɵɵtemplate","FormComponent_tr_52_Template","FormComponent_Template_button_click_56_listener","ɵɵadvance","ɵɵproperty","obterTabelaOriginal"],"sources":["C:\\Users\\JOE\\projeto\\Angular\\TCC\\src\\app\\Front\\Ferramenta\\form\\form.component.ts","C:\\Users\\JOE\\projeto\\Angular\\TCC\\src\\app\\Front\\Ferramenta\\form\\form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { SharedTableService } from 'src/app/Dev/processos/shared-tab.service';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.css']\r\n})\r\nexport class FormComponent implements OnInit{\r\n  numeroLancamento: number = 1;\r\n  dadosTabela: any[] = [];\r\n  tipoEntrada: string = 'Ativo'\r\n  entrada: string = 'Imobilizado'\r\n\r\n  atualizarTipoEntrada(event: Event) {\r\n    this.tipoEntrada = (event.target as HTMLSelectElement).value;\r\n  }\r\n  atualizarEntrada(event: Event) {\r\n    this.entrada = (event.target as HTMLSelectElement).value;\r\n  }\r\n\r\n  constructor(public sharedTableService: SharedTableService) {}\r\n\r\n\r\n  adicionarLinha() {\r\n    // Lógica para adicionar uma linha à tabela original\r\n    const novaLinha = { /* ... */ };\r\n    this.sharedTableService.adicionarLinhaOriginal(novaLinha);\r\n  }\r\n\r\n  adicionarLancamento(): void {\r\n    const numLancamento = (document.querySelector(\"#Base tr:first-child .num-lancamento\") as HTMLElement).textContent;\r\n    const tipoEntrada = (document.querySelector(\"input[type=checkbox]:checked\") as HTMLInputElement)?.id;\r\n    const tipagem = (document.querySelector(\"#Tip-Entrad\") as HTMLSelectElement).value;\r\n    const entrada = (document.querySelector(\"#entrada\") as HTMLSelectElement).value;\r\n    const valor = parseFloat((document.querySelector(\"#Valor\") as HTMLInputElement).value);\r\n    console.log(\"Número de lançamento:\", numLancamento);\r\n    console.log(\"Tipo de entrada:\", tipoEntrada);\r\n    console.log(\"Tipagem:\", tipagem);\r\n    console.log(\"Entrada:\", entrada);\r\n    console.log(\"Valor:\", valor);\r\n  }\r\n\r\n  acompanharL() {\r\n    // Coletar as informações do lançamento\r\n    const numLancamento = (document.querySelector(\"#Base tr:first-child .num-lancamento\") as HTMLElement).textContent;\r\n    const tipoEntrada = (document.querySelector(\"input[type=checkbox]:checked\") as HTMLInputElement)?.id;\r\n    const tipagem = (document.querySelector(\"#Tip-Entrad\") as HTMLSelectElement).value;\r\n    const entrada = (document.querySelector(\"#entrada\") as HTMLSelectElement).value;\r\n    const valor = parseFloat((document.querySelector(\"#Valor\") as HTMLInputElement).value);\r\n\r\n    // Criar um objeto com as informações\r\n    const novoLancamento = {\r\n      numLancamento,\r\n      tipoEntrada,\r\n      tipagem,\r\n      entrada,\r\n      valor,\r\n    };\r\n\r\n    // Usar o serviço SharedTableService para adicionar os dados à lista temporária\r\n    this.sharedTableService.adicionarLinhaEspelhada(novoLancamento);\r\n\r\n    // Copiar os dados da lista temporária para a tabela espelhada\r\n    this.sharedTableService.copiarParaTabelaEspelhada();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    const adicionarLinhaButton = document.getElementById('Adicionar') as HTMLButtonElement;\r\n    const adicionarLancamentoInicialButton = document.getElementById('AdicionarLancamentoInicial') as HTMLButtonElement;\r\n\r\n    adicionarLinhaButton.addEventListener('click', () => {\r\n      const tabelaBase = document.getElementById('Base') as HTMLTableElement;\r\n      const tabelaNova = document.getElementById('Nova') as HTMLTableElement;\r\n      const ultimaLinhaBase = tabelaBase.querySelector('tr:last-child') as HTMLTableRowElement;\r\n      const novaLinha = ultimaLinhaBase.cloneNode(true) as HTMLTableRowElement;\r\n\r\n      // Atualize o número de lançamento na nova linha\r\n      const numLancamentoElement = novaLinha.querySelector('.num-lancamento');\r\n      if (numLancamentoElement) {\r\n        numLancamentoElement.textContent = this.numeroLancamento.toString();\r\n      }\r\n\r\n      // Incremente o número de lançamento para a próxima vez\r\n      this.numeroLancamento++;\r\n\r\n      tabelaBase.appendChild(novaLinha.cloneNode(true) as HTMLTableRowElement);\r\n      tabelaNova.appendChild(novaLinha);\r\n    });\r\n  }\r\n  adicionarLancamentoInicial() {\r\n    const tabelaBase = document.getElementById('Base') as HTMLTableElement;\r\n    const novaLinha = document.createElement('tr');\r\n    this.numeroLancamento++;\r\n    tabelaBase.appendChild(novaLinha.cloneNode(true) as HTMLTableRowElement);\r\n  }\r\n\r\n  }\r\n","<p>form works!</p>\r\n<button id=\"AdicionarLancamentoInicial\" onclick=\"adicionarLancamento()\">Adicionar Lançamento</button>\r\n<table border=\"\" id=\"Base\">\r\n    <tr>\r\n        <td class=\"num-lancamento\"></td>\r\n          <td id=\"Tipo-entrada\">\r\n              <button class=\"DebCre\" id=\"Crédito\" onclick=\"toggleCheckBox('Crédito')\"><label\r\n                      for=\"Crédito\">Crédito</label></button>\r\n              <button class=\"DebCre\" id=\"Débito\" onclick=\"toggleCheckBox('Crédito')\"><label\r\n                      for=\"Débito\">Débito</label></button>\r\n              <input type=\"checkbox\" id=\"hiddenCrédito\" style=\"display: none\">\r\n              <input type=\"checkbox\" id=\"hiddenDébito\" style=\"display: none\">\r\n             </td>\r\n          <td id=\"Tipagem\">\r\n              <label>Tipo de entrada</label><br>\r\n              <select id=\"Tipo-Entrada\" (change)=\"atualizarTipoEntrada($event)\" [(ngModel)]=\"tipoEntrada\">\r\n                <option value=\"Ativo\">Ativo</option>\r\n                <option value=\"Passivo\">Passivo</option>\r\n                <option value=\"PatrL\">Patrimonio Líquido</option>\r\n              </select>\r\n          </td>\r\n          <td id=\"Entrar\">\r\n              <label for=\"entrada\">Escolha sua entrada</label><br>\r\n              <select id=\"entrada\" (change)=\"atualizarEntrada($event)\" [(ngModel)]=\"entrada\">\r\n                   <option id=\"entrada\"></option>\r\n                  <option value=\"Caixa\">Caixa</option>\r\n                  <option value=\"Banco\">Banco</option>\r\n                  <option value=\"Imobilizado\">Imobilizado</option>\r\n                  <option value=\"Estoque\">Estoque</option>\r\n                  <option value=\"Fornecedor\">Fornecedor</option>\r\n                  <option value=\"Emprestimo\">Emprestimo</option>\r\n                  <option value=\"Capital-Social\">Capital Social</option>\r\n              </select>\r\n          </td>\r\n          <td id=\"Valores\">\r\n              <label for=\"Valor\">Digite seu valor</label><br>\r\n              <input type=\"number\" id=\"Valor\" min=\"0\" placeholder=\"0.00\">\r\n          </td>\r\n      </tr>\r\n      <tr *ngFor=\"let entrada of sharedTableService.obterTabelaOriginal()\">\r\n        <!-- Renderize as colunas da tabela original -->\r\n      </tr>\r\n</table>\r\n<table border=\"\" id=\"Nova\">\r\n</table>\r\n<button class=\"Adic\" id=\"Adicionar\">Adicionar</button>\r\n<button class=\"Graf\" id=\"Grafico\"  (click)=\"acompanharL()\" routerLink=\"/Graf-balanço\">Acompanhar</button>\r\n<script type=\"module\" src=\"src\\app\\Front\\ferramenta\\form\\form.component.tss\"></script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}